from os import path
import re
Import("test_env")


#need to use here prepend in order to avoid triggering the istallation process
sources_list = ["pnicoretest.cpp"]

#test sources for utility classes
sources_list.extend(["type_maps_test.cpp"])
sources_list.extend(["type_class_test.cpp"])
sources_list.extend(["type_info_test.cpp"])
sources_list.extend(["size_type_test.cpp"])
sources_list.extend(["slice_test.cpp"])
sources_list.extend(["binary_test.cpp"])
sources_list.extend(["array_view_selector_test.cpp"])
sources_list.extend(["array_selection_test.cpp"])
sources_list.extend(["array_view_test.cpp"])

#test of buffer classes
sources_list.extend(["scalar_test.cpp"])
sources_list.extend(["dbuffer_test.cpp"])
sources_list.extend(["rbuffer_test.cpp"])
sources_list.extend(["sbuffer_test.cpp"])

#tests for array utility classes

sources_list.extend(["static_cindex_map_test.cpp"])
sources_list.extend(["iterator_test.cpp"])
sources_list.extend(["add_operator_test.cpp"])
sources_list.extend(["mult_operator_test.cpp"])
sources_list.extend(["sub_operator_test.cpp"])
sources_list.extend(["div_operator_test.cpp"])
sources_list.extend(["index_map_base_test.cpp"])
sources_list.extend(["index_map_test.cpp"])

sources_list.extend(["SArrayTest.cpp"])
sources_list.extend(["DArrayTest.cpp"])
sources_list.extend(["NumArrayTest.cpp"])
sources_list.extend(["EqualityCheck.cpp"])
sources_list.extend(["configuration_test.cpp"])
sources_list.extend(["counter_test.cpp"])
sources_list.extend(["index_iterator_test.cpp"])
sources_list.extend(["value_test.cpp"])
sources_list.extend(["value_ref_test.cpp"])
sources_list.extend(["array_test.cpp"])

bm_sources = ["iteratorbm.cpp"]

pnicore_test = test_env.Program("pnicoretest",sources_list)
iterbm = test_env.Program("iteratorbm",bm_sources)
multiindexbm = test_env.Program("multiindexbm",["multiindexbm.cpp"])
test_targets = [pnicore_test,iterbm,multiindexbm]

test_env.Alias("test",test_targets)
test_install = test_env.Install("$PREFIX/bin",test_targets)
test_env.Alias("test_install",test_install)
